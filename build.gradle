buildscript {
	dependencies {
//		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
	}
}

plugins {
	id 'java'
	id 'application'
	id 'com.github.spotbugs' version '1.6.2'
	id 'org.sonarqube' version '2.6.2'
}

mainClassName = 'App'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'com.github.spotbugs'
apply plugin: 'eclipse'
apply plugin: 'idea'

//apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

eclipse.project {
  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
  natures 'org.eclipse.buildship.core.gradleprojectnature'
}

idea.module {
  downloadJavadoc = true
//  inheritOutputDirs = true
}

dependencies {
	// This dependency is found on compile classpath of this component and consumers.
	compile 'com.google.guava:guava:23.0'
	runtime 'com.google.guava:guava:23.0'
	
	// Apache Commons IO
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	runtime group: 'commons-io', name: 'commons-io', version: '2.6'
	
	// Apache Commons 'lang3' - for things like pairs and tuples
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	runtime group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
	
	testCompile "org.mockito:mockito-core:2.+"

	testImplementation fileTree(dir: 'libs', include: '*.jar')
	
	// Log4J FTW
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
	annotationProcessor group:'org.apache.logging.log4j', name:'log4j-core', version: '2.11.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
	
	// Reflection Helpers
	compile group: 'org.reflections', name: 'reflections', version: '0.9.11'
	compile group: 'com.sharneng', name: 'jsr305defaults', version: '2.0.3'
	runtime group: 'com.sharneng', name: 'jsr305defaults', version: '2.0.3'
}

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
	maven {
		name = 'gradle'
		url 'https://plugins.gradle.org/m2/'
	}
}

// Commented out due to incompatibility with native junit-gradle
//junitPlatform.enableStandardTestTask true

tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

spotbugs {
	ignoreFailures = true
	toolVersion = '3.1.6'
	effort = 'max'
	reportLevel = 'low'
//	includeFilter = file("$rootProject.projectDir/config/spotbugs-filter.xml")
}

checkstyle {
	ignoreFailures = true
	toolVersion = '8.11'
}

project.afterEvaluate {
	jacoco {
		toolVersion = '0.8.1'
	}




	// create junit platform jacoco task
	project.task(type: JacocoReport, "junitPlatformJacocoReport",
	{
		sourceDirectories = files("./src/main")
		classDirectories = files("${project.buildDir}/classes/main")
 	})
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	options.compilerArgs = [
		'-Xlint:deprecation'
	]
}

tasks.withType(Test) {
  compileTestJava.options.compilerArgs += '-proc:none'
}

test {
  useJUnitPlatform()
}
